version: "3.9"
services:
  cache:
    image: redis:7-alpine
    container_name: redis_cache
    command: redis-server --save 20 1 --loglevel warning --port ${TIMER_REDIS_PORT}
    volumes:
      - redis_data:/data
    ports:
      - ${TIMER_REDIS_PORT}:${TIMER_REDIS_PORT}
    expose:
      - ${TIMER_REDIS_PORT}
    healthcheck:
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
      test: "redis-cli -p $$TIMER_API_PORT ping"

  timer_api:
    container_name: timer_api
    command:
      - "uvicorn"
      - "app.main:app"
      - "--host=0.0.0.0"
      - "--port=8000"
      - "--loop=uvloop"
      - "--no-access-log"
      - "--timeout-keep-alive=30"
    build:
      context: .
    ports:
      - "${TIMER_API_PORT}:${TIMER_API_PORT}"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "2048M"
    environment:
      - STAGE=${STAGE}
      - TIMER_DB_ENDPOINT=cache
      - TIMER_DB_PORT=${TIMER_REDIS_PORT}
      - TIMER_DB_SSL_ENABLED=false
      - TIMER_API_PORT=${TIMER_API_PORT}
      - ENABLE_DOCS=
    healthcheck:
      test: [ "CMD", "python", "-c", "import http.client; import os; conn = http.client.HTTPConnection('0.0.0.0', int(os.environ['TIMER_API_PORT'])); conn.request('GET', '/healthcheck'); exit(0) if conn.getresponse().status == 200 else exit(1);" ]
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 5s
    depends_on:
      - cache
volumes:
  redis_data:
    external: false
